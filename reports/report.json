{
  "stats": {
    "suites": 1,
    "tests": 179,
    "passes": 176,
    "pending": 3,
    "failures": 0,
    "testsRegistered": 179,
    "passPercent": 98.32402234636872,
    "pendingPercent": 1.675977653631285,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-12-26T10:54:42.030Z",
    "end": "2024-12-26T10:57:30.900Z",
    "duration": 168870
  },
  "results": [
    {
      "uuid": "38bba2d5-2553-44ed-9d7b-b5ebdb0deb7f",
      "title": "",
      "fullFile": "cypress\\integration\\page.spec.js",
      "file": "cypress\\integration\\page.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7fd6718a-ad8b-4e5e-8855-d819c5a56767",
          "title": "",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "936ab8ec-7a4c-4bb0-a187-31a761aa03ac",
              "title": "Page with no todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should send 1 todos request",
                  "fullTitle": " Page with no todos should send 1 todos request",
                  "timedOut": null,
                  "duration": 3186,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: []\n})).as('loadCallback');\npage.mockLoad(spy).as('loadRequest');\npage.visit();\ncy.wait('@loadRequest');\ncy.wait(500);\ncy.get('@loadCallback').should('have.callCount', 1);",
                  "err": {},
                  "uuid": "da401755-4324-42bf-9fc4-d5821fb05d39",
                  "parentUUID": "936ab8ec-7a4c-4bb0-a187-31a761aa03ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "6bb5ec97-efe1-48f4-9da2-c4fadfba380e",
                  "title": "",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have NewTodoField",
                      "fullTitle": " Page with no todos  should have NewTodoField",
                      "timedOut": null,
                      "duration": 438,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('exist');",
                      "err": {},
                      "uuid": "8a5b9e3e-ffca-427c-904a-3aac7bda705d",
                      "parentUUID": "6bb5ec97-efe1-48f4-9da2-c4fadfba380e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Todos",
                      "fullTitle": " Page with no todos  should not have Todos",
                      "timedOut": null,
                      "duration": 366,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "27cd4dc3-9c91-4acb-b91b-a76495920591",
                      "parentUUID": "6bb5ec97-efe1-48f4-9da2-c4fadfba380e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Footer",
                      "fullTitle": " Page with no todos  should not have Footer",
                      "timedOut": null,
                      "duration": 343,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "7ffdc649-28bf-4ee9-b0dd-371a1072a9d6",
                      "parentUUID": "6bb5ec97-efe1-48f4-9da2-c4fadfba380e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show error message",
                      "fullTitle": " Page with no todos  should not show error message",
                      "timedOut": null,
                      "duration": 314,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertHidden();",
                      "err": {},
                      "uuid": "49bf0ee5-8c3b-4c69-a3b6-fe721e3fc5b9",
                      "parentUUID": "6bb5ec97-efe1-48f4-9da2-c4fadfba380e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8a5b9e3e-ffca-427c-904a-3aac7bda705d",
                    "27cd4dc3-9c91-4acb-b91b-a76495920591",
                    "7ffdc649-28bf-4ee9-b0dd-371a1072a9d6",
                    "49bf0ee5-8c3b-4c69-a3b6-fe721e3fc5b9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1461,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "555f5dac-90f3-49f9-9b9d-5558503b859b",
                  "title": "on loading error",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show error",
                      "fullTitle": " Page with no todos on loading error should show error",
                      "timedOut": null,
                      "duration": 283,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();",
                      "err": {},
                      "uuid": "54e082be-e782-4517-9ddb-70362e44f6f1",
                      "parentUUID": "555f5dac-90f3-49f9-9b9d-5558503b859b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show correct message",
                      "fullTitle": " Page with no todos on loading error should show correct message",
                      "timedOut": null,
                      "duration": 300,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertText('Unable to load todos');",
                      "err": {},
                      "uuid": "fc9590e5-a7dc-437c-bc0c-78389921b464",
                      "parentUUID": "555f5dac-90f3-49f9-9b9d-5558503b859b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error after 3 seconds",
                      "fullTitle": " Page with no todos on loading error should hide error after 3 seconds",
                      "timedOut": null,
                      "duration": 3326,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "169e8296-1324-4bac-ba22-e443e2c9f6c0",
                      "parentUUID": "555f5dac-90f3-49f9-9b9d-5558503b859b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error on close button click",
                      "fullTitle": " Page with no todos on loading error should hide error on close button click",
                      "timedOut": null,
                      "duration": 1048,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.closeButton().click();\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "c2932bcc-10c2-4af6-835a-06528612cd09",
                      "parentUUID": "555f5dac-90f3-49f9-9b9d-5558503b859b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "54e082be-e782-4517-9ddb-70362e44f6f1",
                    "fc9590e5-a7dc-437c-bc0c-78389921b464",
                    "169e8296-1324-4bac-ba22-e443e2c9f6c0",
                    "c2932bcc-10c2-4af6-835a-06528612cd09"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4957,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "da401755-4324-42bf-9fc4-d5821fb05d39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3186,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
              "title": "Page with mixed todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have NewTodoField",
                  "fullTitle": " Page with mixed todos should have NewTodoField",
                  "timedOut": null,
                  "duration": 310,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('exist');",
                  "err": {},
                  "uuid": "a5eac884-2b5f-4016-ac76-11e75539318d",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have all loaded todos",
                  "fullTitle": " Page with mixed todos should have all loaded todos",
                  "timedOut": null,
                  "duration": 277,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(5);",
                  "err": {},
                  "uuid": "7bd6963e-ee6e-4524-ae1a-85d03ec434d7",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have delete buttons for every todo",
                  "fullTitle": " Page with mixed todos should have delete buttons for every todo",
                  "timedOut": null,
                  "duration": 421,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.deleteButton(0).should('exist');",
                  "err": {},
                  "uuid": "b48ba670-2f3d-450c-abe8-f22841e64087",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not have loaders",
                  "fullTitle": " Page with mixed todos should not have loaders",
                  "timedOut": null,
                  "duration": 335,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                  "err": {},
                  "uuid": "7955bb98-5907-4a9b-ae22-721017dc054a",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct todo titles",
                  "fullTitle": " Page with mixed todos should have correct todo titles",
                  "timedOut": null,
                  "duration": 947,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');\ntodos.assertTitle(3, 'TypeScript');\ntodos.assertTitle(4, 'React');",
                  "err": {},
                  "uuid": "d216d41c-b435-4131-b123-ccb25190c9c2",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should higlight all completed todos",
                  "fullTitle": " Page with mixed todos should higlight all completed todos",
                  "timedOut": null,
                  "duration": 388,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);",
                  "err": {},
                  "uuid": "2abc4dbb-58ea-4c01-be2f-9477d922db51",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not higlight not completed todos",
                  "fullTitle": " Page with mixed todos should not higlight not completed todos",
                  "timedOut": null,
                  "duration": 276,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotCompleted(3);\ntodos.assertNotCompleted(4);",
                  "err": {},
                  "uuid": "b6b07cac-cdbf-444d-a120-58e6663259e1",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct completed statuses",
                  "fullTitle": " Page with mixed todos should have correct completed statuses",
                  "timedOut": null,
                  "duration": 327,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.statusToggler(0).should('be.checked');\ntodos.statusToggler(1).should('be.checked');\ntodos.statusToggler(2).should('be.checked');\ntodos.statusToggler(3).should('not.be.checked');\ntodos.statusToggler(4).should('not.be.checked');",
                  "err": {},
                  "uuid": "82d3d779-036e-48f7-8cb8-ba6c41ee5471",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 326,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "949eec32-b0dd-4d5c-87d6-92064b7d0541",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have todosCounter with a number of not completed todos",
                  "fullTitle": " Page with mixed todos should have todosCounter with a number of not completed todos",
                  "timedOut": null,
                  "duration": 312,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('have.text', '2 items left');",
                  "err": {},
                  "uuid": "72d5f0a9-d54f-4237-aef9-c50d36608b63",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have clearCompletedButton",
                  "fullTitle": " Page with mixed todos should have clearCompletedButton",
                  "timedOut": null,
                  "duration": 313,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.clearCompletedButton().should('exist');",
                  "err": {},
                  "uuid": "1966a99b-9d25-4112-86fb-65729911bfd8",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 372,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "f581f6fb-9537-458e-877e-7e41b39a253e",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not show error message",
                  "fullTitle": " Page with mixed todos should not show error message",
                  "timedOut": null,
                  "duration": 330,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "errorMessage.assertHidden();",
                  "err": {},
                  "uuid": "3dbb7d1b-e930-4212-89ee-47301c2710f2",
                  "parentUUID": "d5bab45a-3026-4408-851a-0f5afcc5a48a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5eac884-2b5f-4016-ac76-11e75539318d",
                "7bd6963e-ee6e-4524-ae1a-85d03ec434d7",
                "b48ba670-2f3d-450c-abe8-f22841e64087",
                "7955bb98-5907-4a9b-ae22-721017dc054a",
                "d216d41c-b435-4131-b123-ccb25190c9c2",
                "2abc4dbb-58ea-4c01-be2f-9477d922db51",
                "b6b07cac-cdbf-444d-a120-58e6663259e1",
                "82d3d779-036e-48f7-8cb8-ba6c41ee5471",
                "949eec32-b0dd-4d5c-87d6-92064b7d0541",
                "72d5f0a9-d54f-4237-aef9-c50d36608b63",
                "1966a99b-9d25-4112-86fb-65729911bfd8",
                "f581f6fb-9537-458e-877e-7e41b39a253e",
                "3dbb7d1b-e930-4212-89ee-47301c2710f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4934,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4237f426-25d6-48e8-a17e-d7b6d2284638",
              "title": "Filtering",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                  "title": "with mixed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have only filterLinkAll active",
                      "fullTitle": " Filtering with mixed todos should have only filterLinkAll active",
                      "timedOut": null,
                      "duration": 370,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "bb044feb-3429-41a1-a603-a28c8341957c",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the active filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the active filter",
                      "timedOut": null,
                      "duration": 438,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\nfilter.assertNotSelected('all');\nfilter.assertSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "534cde46-7920-40ca-a973-5988ed82e948",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only active todos when active filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only active todos when active filter is selected",
                      "timedOut": null,
                      "duration": 547,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\ntodos.assertCount(2);\ntodos.assertTitle(0, 'TypeScript');\ntodos.assertTitle(1, 'React');",
                      "err": {},
                      "uuid": "eccc84db-8183-4a44-b511-51bb0580025b",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when active todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when active todos are shown",
                      "timedOut": null,
                      "duration": 1204,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "1233877d-58c5-4092-8cf0-ba88ebe309a8",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the completed filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the completed filter",
                      "timedOut": null,
                      "duration": 433,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertNotSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertSelected('completed');",
                      "err": {},
                      "uuid": "ee6deb2c-1a95-4aaa-8dde-2dc55c400b47",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only completed todos when completed filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only completed todos when completed filter is selected",
                      "timedOut": null,
                      "duration": 451,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');",
                      "err": {},
                      "uuid": "ad4242a3-e871-48c6-b848-5b1b71fccf0c",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when completed todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when completed todos are shown",
                      "timedOut": null,
                      "duration": 563,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "1f530fb0-d8aa-4690-be49-41ef7b2084d9",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to reset filter",
                      "fullTitle": " Filtering with mixed todos should allow to reset filter",
                      "timedOut": null,
                      "duration": 608,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.link('all').click();\ntodos.assertCount(5);\nfilter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "84f7342d-b8d0-4bb6-b8df-7757f94647f1",
                      "parentUUID": "083eedc3-da96-4173-a28c-5b6feb225ef7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bb044feb-3429-41a1-a603-a28c8341957c",
                    "534cde46-7920-40ca-a973-5988ed82e948",
                    "eccc84db-8183-4a44-b511-51bb0580025b",
                    "1233877d-58c5-4092-8cf0-ba88ebe309a8",
                    "ee6deb2c-1a95-4aaa-8dde-2dc55c400b47",
                    "ad4242a3-e871-48c6-b848-5b1b71fccf0c",
                    "1f530fb0-d8aa-4690-be49-41ef7b2084d9",
                    "84f7342d-b8d0-4bb6-b8df-7757f94647f1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4614,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "848d3504-113b-451d-b625-46870ce24d02",
                  "title": "with active todos only",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos on completed selection",
                      "fullTitle": " Filtering with active todos only should hide todos on completed selection",
                      "timedOut": null,
                      "duration": 514,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(0);",
                      "err": {},
                      "uuid": "fc5bd08d-af2d-41de-b476-e2d51e90c739",
                      "parentUUID": "848d3504-113b-451d-b625-46870ce24d02",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer on completed selection",
                      "fullTitle": " Filtering with active todos only should keep footer on completed selection",
                      "timedOut": null,
                      "duration": 1331,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertVisible();",
                      "err": {},
                      "uuid": "f2547958-f3a7-48b4-88e8-706e05bb63b4",
                      "parentUUID": "848d3504-113b-451d-b625-46870ce24d02",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep todos counter on completed selection",
                      "fullTitle": " Filtering with active todos only should keep todos counter on completed selection",
                      "timedOut": null,
                      "duration": 782,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '5 items left');",
                      "err": {},
                      "uuid": "4e7d81c4-8f62-4517-95a7-810727b577a8",
                      "parentUUID": "848d3504-113b-451d-b625-46870ce24d02",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fc5bd08d-af2d-41de-b476-e2d51e90c739",
                    "f2547958-f3a7-48b4-88e8-706e05bb63b4",
                    "4e7d81c4-8f62-4517-95a7-810727b577a8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2627,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "7f249cda-039a-45f3-ae72-3011c8031b49",
                  "title": "with completed todos only",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos on active selection",
                      "fullTitle": " Filtering with completed todos only should hide todos on active selection",
                      "timedOut": null,
                      "duration": 787,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\ntodos.assertCount(0);",
                      "err": {},
                      "uuid": "ae6b6d16-11c7-4b57-94e8-ee6c1f84d0c0",
                      "parentUUID": "7f249cda-039a-45f3-ae72-3011c8031b49",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer on active selection",
                      "fullTitle": " Filtering with completed todos only should keep footer on active selection",
                      "timedOut": null,
                      "duration": 817,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\nfilter.assertVisible();",
                      "err": {},
                      "uuid": "740956ff-c268-43cc-b327-b187454c7f50",
                      "parentUUID": "7f249cda-039a-45f3-ae72-3011c8031b49",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep todos counter on active selection",
                      "fullTitle": " Filtering with completed todos only should keep todos counter on active selection",
                      "timedOut": null,
                      "duration": 782,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.todosCounter().should('have.text', '0 items left');",
                      "err": {},
                      "uuid": "d3f11ce9-36a6-442b-87db-0a83f611bf18",
                      "parentUUID": "7f249cda-039a-45f3-ae72-3011c8031b49",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae6b6d16-11c7-4b57-94e8-ee6c1f84d0c0",
                    "740956ff-c268-43cc-b327-b187454c7f50",
                    "d3f11ce9-36a6-442b-87db-0a83f611bf18"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2386,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0a1a5d40-d86b-4082-8df5-70e9080845d6",
              "title": "Adding a todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should focus text field by default",
                  "fullTitle": " Adding a todo should focus text field by default",
                  "timedOut": null,
                  "duration": 729,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('be.focused');",
                  "err": {},
                  "uuid": "e1454253-7997-4962-b3bc-22ede4820d25",
                  "parentUUID": "0a1a5d40-d86b-4082-8df5-70e9080845d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "4113a1fc-cc92-4df8-b7f5-e02338fe6891",
                  "title": "if title is empty",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title is empty should not send a request",
                      "timedOut": null,
                      "duration": 588,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "5e659e12-71ba-468e-9f88-d52d2b5c54db",
                      "parentUUID": "4113a1fc-cc92-4df8-b7f5-e02338fe6891",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title is empty should keep text field focused",
                      "timedOut": null,
                      "duration": 432,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "a3e2c19a-cc2a-4658-8e15-238ccd4074cd",
                      "parentUUID": "4113a1fc-cc92-4df8-b7f5-e02338fe6891",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title is empty should display an error message",
                      "timedOut": null,
                      "duration": 402,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "cb35a6c9-ba2a-4277-901a-a3d3c7cedb11",
                      "parentUUID": "4113a1fc-cc92-4df8-b7f5-e02338fe6891",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title is empty should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3409,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "f5e4d308-d2d8-4444-9e4f-4b60c2a8d36e",
                      "parentUUID": "4113a1fc-cc92-4df8-b7f5-e02338fe6891",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5e659e12-71ba-468e-9f88-d52d2b5c54db",
                    "a3e2c19a-cc2a-4658-8e15-238ccd4074cd",
                    "cb35a6c9-ba2a-4277-901a-a3d3c7cedb11",
                    "f5e4d308-d2d8-4444-9e4f-4b60c2a8d36e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4831,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "9d9d39bc-d807-4b91-84b2-6c2945a66761",
                  "title": "if title title has only whitespaces",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title title has only whitespaces should not send a request",
                      "timedOut": null,
                      "duration": 1055,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "976cdd83-7f9b-474a-9634-4d84d2e72a0b",
                      "parentUUID": "9d9d39bc-d807-4b91-84b2-6c2945a66761",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title title has only whitespaces should keep text field focused",
                      "timedOut": null,
                      "duration": 519,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "e6c483f7-fe53-4c63-9834-0edb454261e3",
                      "parentUUID": "9d9d39bc-d807-4b91-84b2-6c2945a66761",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title title has only whitespaces should display an error message",
                      "timedOut": null,
                      "duration": 509,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "c774664e-c4bc-46af-bc2e-3f7c68360431",
                      "parentUUID": "9d9d39bc-d807-4b91-84b2-6c2945a66761",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title title has only whitespaces should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3534,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "909f5a32-3b48-49f0-aed3-9b2731208278",
                      "parentUUID": "9d9d39bc-d807-4b91-84b2-6c2945a66761",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "976cdd83-7f9b-474a-9634-4d84d2e72a0b",
                    "e6c483f7-fe53-4c63-9834-0edb454261e3",
                    "c774664e-c4bc-46af-bc2e-3f7c68360431",
                    "909f5a32-3b48-49f0-aed3-9b2731208278"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5617,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                  "title": "after form submition before response is received",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should send a create request",
                      "fullTitle": " Adding a todo after form submition before response is received should send a create request",
                      "timedOut": null,
                      "duration": 723,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.tick(1000);\ncy.get('@createCallback').should('have.callCount', 1);",
                      "err": {},
                      "uuid": "ae5281ce-a651-40b4-8d8c-6c149af1aac3",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should disable the input",
                      "fullTitle": " Adding a todo after form submition before response is received should disable the input",
                      "timedOut": null,
                      "duration": 596,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.disabled');",
                      "err": {},
                      "uuid": "53082955-25a2-4e36-8db2-0f2708e3fc23",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep entered text",
                      "fullTitle": " Adding a todo after form submition before response is received should keep entered text",
                      "timedOut": null,
                      "duration": 541,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "83bde544-2720-4554-9dd2-a45ee26b3d1f",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should create and show a temp TodoItem with Loader",
                      "fullTitle": " Adding a todo after form submition before response is received should create and show a temp TodoItem with Loader",
                      "timedOut": null,
                      "duration": 496,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(6);\ntodos.assertLoading(5);",
                      "err": {},
                      "uuid": "fa51974b-b683-470a-95a3-a877c0973e41",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a temp TodoItem with correct title",
                      "fullTitle": " Adding a todo after form submition before response is received should show a temp TodoItem with correct title",
                      "timedOut": null,
                      "duration": 540,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertTitle(5, 'Test Todo');",
                      "err": {},
                      "uuid": "ec109d41-13d1-443d-bf7c-61ebe5dbf023",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a not completed temp TodoItem",
                      "fullTitle": " Adding a todo after form submition before response is received should show a not completed temp TodoItem",
                      "timedOut": null,
                      "duration": 1294,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotCompleted(5);",
                      "err": {},
                      "uuid": "4e4824f1-86d4-47f6-b501-a5aee0868af0",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show loaders for existing todos",
                      "fullTitle": " Adding a todo after form submition before response is received should not show loaders for existing todos",
                      "timedOut": null,
                      "duration": 582,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                      "err": {},
                      "uuid": "4fae1005-83cb-4f10-8d1e-6ec96314f452",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo after form submition before response is received should not update active counter",
                      "timedOut": null,
                      "duration": 585,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "defaafb4-1a2c-4615-a060-434c2956b8dd",
                      "parentUUID": "e8e83aff-ab27-42e3-993f-5125e8c03f34",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ae5281ce-a651-40b4-8d8c-6c149af1aac3",
                    "53082955-25a2-4e36-8db2-0f2708e3fc23",
                    "83bde544-2720-4554-9dd2-a45ee26b3d1f",
                    "fa51974b-b683-470a-95a3-a877c0973e41",
                    "ec109d41-13d1-443d-bf7c-61ebe5dbf023",
                    "4e4824f1-86d4-47f6-b501-a5aee0868af0",
                    "4fae1005-83cb-4f10-8d1e-6ec96314f452",
                    "defaafb4-1a2c-4615-a060-434c2956b8dd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5357,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "b02289b0-51b5-43c7-b077-2463f3b7349f",
                  "title": "on success response",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should add trimmed title",
                      "fullTitle": " Adding a todo on success response should add trimmed title",
                      "timedOut": null,
                      "duration": 1004,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\npage.newTodoField().type('  Other Title    {enter}');\ncy.wait('@createRequest');\n// just in case\npage.flushJSTimers();\ntodos.assertTitle(5, 'Other Title');",
                      "err": {},
                      "uuid": "6159536c-f046-48b0-8ad4-214a653b908b",
                      "parentUUID": "b02289b0-51b5-43c7-b077-2463f3b7349f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep current filter",
                      "fullTitle": " Adding a todo on success response should keep current filter",
                      "timedOut": null,
                      "duration": 843,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\nfilter.link('active').click();\npage.newTodoField().type('Test Todo{enter}');\ncy.wait('@createRequest');\nfilter.assertSelected('active');",
                      "err": {},
                      "uuid": "6e8b629e-d75b-405f-a28a-c6551f072a6c",
                      "parentUUID": "b02289b0-51b5-43c7-b077-2463f3b7349f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                      "title": "",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should replace loader with a created todo",
                          "fullTitle": " Adding a todo on success response  should replace loader with a created todo",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "page.flushJSTimers();\ntodos.assertCount(6);\ntodos.assertNotLoading(5);",
                          "err": {},
                          "uuid": "1ac37245-274d-4f41-aac0-2e15bfe803d9",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a todo with a correct title",
                          "fullTitle": " Adding a todo on success response  should add a todo with a correct title",
                          "timedOut": null,
                          "duration": 610,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertTitle(5, 'Test Todo');",
                          "err": {},
                          "uuid": "d17631c3-51cc-44d0-8cfa-f9deaceffb71",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a not completed todo",
                          "fullTitle": " Adding a todo on success response  should add a not completed todo",
                          "timedOut": null,
                          "duration": 766,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertNotCompleted(5);",
                          "err": {},
                          "uuid": "bb7bb542-83de-4740-a1fb-ac8eaf08da23",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should update active counter",
                          "fullTitle": " Adding a todo on success response  should update active counter",
                          "timedOut": null,
                          "duration": 827,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.todosCounter().should('have.text', '3 items left');",
                          "err": {},
                          "uuid": "a9b0a8f4-7a39-43da-a32c-9f6f244fbce4",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should enable the text field",
                          "fullTitle": " Adding a todo on success response  should enable the text field",
                          "timedOut": null,
                          "duration": 925,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('not.be.disabled');",
                          "err": {},
                          "uuid": "2459f0ad-5d6d-4d3d-a043-b301f4e1da6b",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not show error message",
                          "fullTitle": " Adding a todo on success response  should not show error message",
                          "timedOut": null,
                          "duration": 998,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertHidden();",
                          "err": {},
                          "uuid": "e875c0d3-5a5f-438e-b89c-e0adcc4ba465",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should clear text field",
                          "fullTitle": " Adding a todo on success response  should clear text field",
                          "timedOut": null,
                          "duration": 1236,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('have.value', '');",
                          "err": {},
                          "uuid": "137c7382-4bb8-494a-9105-7b921e39922b",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should focus text field",
                          "fullTitle": " Adding a todo on success response  should focus text field",
                          "timedOut": null,
                          "duration": 1171,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('be.focused');",
                          "err": {},
                          "uuid": "1487d0fa-2cd0-45f3-976c-a00c81acdae7",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should allow to add one more todo",
                          "fullTitle": " Adding a todo on success response  should allow to add one more todo",
                          "timedOut": null,
                          "duration": 1214,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('Hello world{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(7);\n// todos.assertNotLoading(6);\ntodos.assertNotCompleted(6);\ntodos.assertTitle(6, 'Hello world');\npage.todosCounter().should('have.text', '4 items left');",
                          "err": {},
                          "uuid": "22c017b2-0cc9-4679-b147-5fcb86001f29",
                          "parentUUID": "d2f460e0-409d-4ffa-9841-d9f0c499ce79",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "d17631c3-51cc-44d0-8cfa-f9deaceffb71",
                        "bb7bb542-83de-4740-a1fb-ac8eaf08da23",
                        "a9b0a8f4-7a39-43da-a32c-9f6f244fbce4",
                        "2459f0ad-5d6d-4d3d-a043-b301f4e1da6b",
                        "e875c0d3-5a5f-438e-b89c-e0adcc4ba465",
                        "137c7382-4bb8-494a-9105-7b921e39922b",
                        "1487d0fa-2cd0-45f3-976c-a00c81acdae7",
                        "22c017b2-0cc9-4679-b147-5fcb86001f29"
                      ],
                      "failures": [],
                      "pending": [
                        "1ac37245-274d-4f41-aac0-2e15bfe803d9"
                      ],
                      "skipped": [],
                      "duration": 7747,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "6159536c-f046-48b0-8ad4-214a653b908b",
                    "6e8b629e-d75b-405f-a28a-c6551f072a6c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1847,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "7255b29e-4604-46ee-aa40-314864a9b360",
                  "title": "on request fail",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show an error message",
                      "fullTitle": " Adding a todo on request fail should show an error message",
                      "timedOut": null,
                      "duration": 769,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to add a todo');",
                      "err": {},
                      "uuid": "20f1d4dc-a6dc-49c6-a707-4704e7277c44",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message in 3 seconds",
                      "fullTitle": " Adding a todo on request fail should hide an error message in 3 seconds",
                      "timedOut": null,
                      "duration": 3740,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "d2f4c711-6731-42ce-9160-15cea5b747c4",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should remove a temp TodoItem on request fail",
                      "fullTitle": " Adding a todo on request fail should remove a temp TodoItem on request fail",
                      "timedOut": null,
                      "duration": 856,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(5);\ntodos.assertTitle(4, 'React');",
                      "err": {},
                      "uuid": "3ac40049-869d-45a1-8142-756991be1923",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should enable the text field on request fail",
                      "fullTitle": " Adding a todo on request fail should enable the text field on request fail",
                      "timedOut": null,
                      "duration": 847,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('not.be.disabled');",
                      "err": {},
                      "uuid": "99bb01e1-9b2f-46a3-963c-24756233612c",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep the entered text on request fail",
                      "fullTitle": " Adding a todo on request fail should keep the entered text on request fail",
                      "timedOut": null,
                      "duration": 1467,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "a59b338d-8aad-48d0-a93d-df3c87a77ebc",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should focus text field",
                      "fullTitle": " Adding a todo on request fail should focus text field",
                      "timedOut": null,
                      "duration": 1106,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "c280db07-ea06-4a48-9ec9-bb968fe4f5b1",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo on request fail should not update active counter",
                      "timedOut": null,
                      "duration": 882,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "addf882a-5be2-4c56-86c9-5d7a0891de2a",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should immediately hide an error message on new request",
                      "fullTitle": " Adding a todo on request fail should immediately hide an error message on new request",
                      "timedOut": null,
                      "duration": 3882,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().type(`{enter}`);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "53c09eba-fc23-4e19-9e7d-522560022a61",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show an error message again on a next fail",
                      "fullTitle": " Adding a todo on request fail should show an error message again on a next fail",
                      "timedOut": null,
                      "duration": 950,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\npage.newTodoField().type(`{enter}`);\ncy.wait('@createRequest2');\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "6912c3da-72c3-4ac6-9529-760f32a7ce8f",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep an error message for 3s after the last fail",
                      "fullTitle": " Adding a todo on request fail should keep an error message for 3s after the last fail",
                      "timedOut": null,
                      "duration": 883,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\ncy.clock();\ncy.tick(2000);\npage.newTodoField().type(`{enter}`);\ncy.tick(500);\ncy.wait('@createRequest2');\ncy.tick(2000);\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "edc3b0eb-7b97-4c8d-97db-0b70d528ec7b",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to add a todo",
                      "fullTitle": " Adding a todo on request fail should allow to add a todo",
                      "timedOut": null,
                      "duration": 1708,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(6);\n// todos.assertNotLoading(5);\ntodos.assertNotCompleted(5);\ntodos.assertTitle(5, 'Test Todo');\npage.todosCounter().should('have.text', '3 items left');",
                      "err": {},
                      "uuid": "d253f7e0-5144-486e-a6f0-1618c9e8aeb6",
                      "parentUUID": "7255b29e-4604-46ee-aa40-314864a9b360",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "20f1d4dc-a6dc-49c6-a707-4704e7277c44",
                    "d2f4c711-6731-42ce-9160-15cea5b747c4",
                    "3ac40049-869d-45a1-8142-756991be1923",
                    "99bb01e1-9b2f-46a3-963c-24756233612c",
                    "a59b338d-8aad-48d0-a93d-df3c87a77ebc",
                    "c280db07-ea06-4a48-9ec9-bb968fe4f5b1",
                    "addf882a-5be2-4c56-86c9-5d7a0891de2a",
                    "53c09eba-fc23-4e19-9e7d-522560022a61",
                    "6912c3da-72c3-4ac6-9529-760f32a7ce8f",
                    "edc3b0eb-7b97-4c8d-97db-0b70d528ec7b",
                    "d253f7e0-5144-486e-a6f0-1618c9e8aeb6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 17090,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "e1454253-7997-4962-b3bc-22ede4820d25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 729,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "afada186-1c29-4a75-8f56-2438cb2ca890",
              "title": "Adding a first todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show a new todos",
                  "fullTitle": " Adding a first todo should show a new todos",
                  "timedOut": null,
                  "duration": 707,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(1);\ntodos.assertTitle(0, 'First todo');\ntodos.assertNotCompleted(0);",
                  "err": {},
                  "uuid": "8c7bf0f7-9c8a-422a-8256-f71fdd974fff",
                  "parentUUID": "afada186-1c29-4a75-8f56-2438cb2ca890",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show Filter",
                  "fullTitle": " Adding a first todo should show Filter",
                  "timedOut": null,
                  "duration": 699,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "10a4648d-9c3c-4ed3-9451-15a17d83368c",
                  "parentUUID": "afada186-1c29-4a75-8f56-2438cb2ca890",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show todosCounter",
                  "fullTitle": " Adding a first todo should show todosCounter",
                  "timedOut": null,
                  "duration": 615,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('contain.text', '1 item');",
                  "err": {},
                  "uuid": "d3df93b2-2902-4818-8389-83e511e79a2f",
                  "parentUUID": "afada186-1c29-4a75-8f56-2438cb2ca890",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c7bf0f7-9c8a-422a-8256-f71fdd974fff",
                "10a4648d-9c3c-4ed3-9451-15a17d83368c",
                "d3df93b2-2902-4818-8389-83e511e79a2f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2021,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8648deda-6b3b-4ed4-8b02-a77696b05aeb",
              "title": "Individual Todo Deletion",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                  "title": "Default behavior",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should display a loader on the todo when the TodoDeleteButton is clicked",
                      "fullTitle": " Individual Todo Deletion Default behavior should display a loader on the todo when the TodoDeleteButton is clicked",
                      "timedOut": null,
                      "duration": 414,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334);\npage.pauseTimers();\ntodos.deleteButton(0).click();\ntodos.assertLoading(0);",
                      "err": {},
                      "uuid": "7b7290ec-99d2-4979-a240-41d3475be3ed",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not delete a todo before successful response",
                      "fullTitle": " Individual Todo Deletion Default behavior should not delete a todo before successful response",
                      "timedOut": null,
                      "duration": 391,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334);\npage.pauseTimers();\ntodos.deleteButton(0).click();\ntodos.assertCount(5);",
                      "err": {},
                      "uuid": "409d6cee-e3fc-48a0-9c9e-5b8c44a86fae",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should remove the todo from the list on a successful API response",
                      "fullTitle": " Individual Todo Deletion Default behavior should remove the todo from the list on a successful API response",
                      "timedOut": null,
                      "duration": 602,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\ntodos.assertCount(4);\ntodos.assertTitle(0, 'CSS');",
                      "err": {},
                      "uuid": "54545acf-9073-4f33-a15a-b185e855182b",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should focus text field after todo deletion",
                      "fullTitle": " Individual Todo Deletion Default behavior should focus text field after todo deletion",
                      "timedOut": null,
                      "duration": 475,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\npage.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "d508ce8b-c097-40b8-afe4-f6324b13110c",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not remove the todo from the list on an API error",
                      "fullTitle": " Individual Todo Deletion Default behavior should not remove the todo from the list on an API error",
                      "timedOut": null,
                      "duration": 539,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 500,\n  body: 'Internal Server Error'\n}).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\ntodos.assertCount(5);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "fc22ffca-17a5-44c3-bd5b-e63c46a584fb",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show an error message on an API error",
                      "fullTitle": " Individual Todo Deletion Default behavior should show an error message on an API error",
                      "timedOut": null,
                      "duration": 479,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 500,\n  body: 'Internal Server Error'\n}).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\nerrorMessage.assertVisible();\nerrorMessage.assertText('Unable to delete a todo');",
                      "err": {},
                      "uuid": "fbc4b635-5e7c-4377-95dd-c5761d09816c",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should adjust the active todo count correctly after successful deletion",
                      "fullTitle": " Individual Todo Deletion Default behavior should adjust the active todo count correctly after successful deletion",
                      "timedOut": null,
                      "duration": 456,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257338).as('deleteRequest');\ntodos.deleteButton(4).click();\ncy.wait('@deleteRequest');\npage.todosCounter().should('contain.text', '1 item');",
                      "err": {},
                      "uuid": "e08a8cb9-f49a-4b40-a229-be9a8affc7cf",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not adjust the active todo count after failed deletion",
                      "fullTitle": " Individual Todo Deletion Default behavior should not adjust the active todo count after failed deletion",
                      "timedOut": null,
                      "duration": 554,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257338, {\n  statusCode: 500,\n  body: 'Internal Server Error'\n}).as('deleteRequest');\ntodos.deleteButton(4).click();\ncy.wait('@deleteRequest');\npage.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "188f034b-d2dc-4141-a58f-945b3ae5ac93",
                      "parentUUID": "c5ddb850-4210-49c9-8d58-1e8b9b9a1769",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7b7290ec-99d2-4979-a240-41d3475be3ed",
                    "409d6cee-e3fc-48a0-9c9e-5b8c44a86fae",
                    "54545acf-9073-4f33-a15a-b185e855182b",
                    "d508ce8b-c097-40b8-afe4-f6324b13110c",
                    "fc22ffca-17a5-44c3-bd5b-e63c46a584fb",
                    "fbc4b635-5e7c-4377-95dd-c5761d09816c",
                    "e08a8cb9-f49a-4b40-a229-be9a8affc7cf",
                    "188f034b-d2dc-4141-a58f-945b3ae5ac93"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3910,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "97b90331-c003-435c-b495-8012cee6a782",
                  "title": "Last todo deletion",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos",
                      "fullTitle": " Individual Todo Deletion Last todo deletion should hide todos",
                      "timedOut": null,
                      "duration": 508,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "badb92a0-55a5-45ab-846a-9bb971d18ff7",
                      "parentUUID": "97b90331-c003-435c-b495-8012cee6a782",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide footer",
                      "fullTitle": " Individual Todo Deletion Last todo deletion should hide footer",
                      "timedOut": null,
                      "duration": 455,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "2c622d68-7201-4e45-9700-1c5f83c5ca0a",
                      "parentUUID": "97b90331-c003-435c-b495-8012cee6a782",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should focus text field after todo deletion",
                      "fullTitle": " Individual Todo Deletion Last todo deletion should focus text field after todo deletion",
                      "timedOut": null,
                      "duration": 777,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "4f3c89c7-b73b-4461-8b3b-8a0fbfb7a64a",
                      "parentUUID": "97b90331-c003-435c-b495-8012cee6a782",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "badb92a0-55a5-45ab-846a-9bb971d18ff7",
                    "2c622d68-7201-4e45-9700-1c5f83c5ca0a",
                    "4f3c89c7-b73b-4461-8b3b-8a0fbfb7a64a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1740,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "321049c5-d1db-4f0c-be51-4e2ab240c1fb",
              "title": "Group Todo Deletion",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6b6be723-f19e-4444-8844-36a25d227a72",
                  "title": "with no completed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not have active ClearCompleted button",
                      "fullTitle": " Group Todo Deletion with no completed todos should not have active ClearCompleted button",
                      "timedOut": null,
                      "duration": 717,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.clearCompletedButton().should('be.disabled');",
                      "err": {},
                      "uuid": "0b29bff8-bb73-43e7-a02f-a647b44fca7e",
                      "parentUUID": "6b6be723-f19e-4444-8844-36a25d227a72",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0b29bff8-bb73-43e7-a02f-a647b44fca7e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 717,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "4e06978f-3b56-4093-b9ea-f489539b4b5e",
                  "title": "with some completed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have ClearCompleted button enabled",
                      "fullTitle": " Group Todo Deletion with some completed todos should have ClearCompleted button enabled",
                      "timedOut": null,
                      "duration": 377,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.clearCompletedButton().should('not.be.disabled');",
                      "err": {},
                      "uuid": "164ad26d-18e2-476b-8515-459881508fd7",
                      "parentUUID": "4e06978f-3b56-4093-b9ea-f489539b4b5e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should send individual deletion request for each completed todo",
                      "fullTitle": " Group Todo Deletion with some completed todos should send individual deletion request for each completed todo",
                      "timedOut": null,
                      "duration": 583,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334).as('deleteRequest1');\npage.mockDelete(257335).as('deleteRequest2');\npage.mockDelete(257336).as('deleteRequest3');\npage.clearCompletedButton().click();\ncy.wait('@deleteRequest1');\ncy.wait('@deleteRequest2');\ncy.wait('@deleteRequest3');",
                      "err": {},
                      "uuid": "b6ffe8fe-d7d9-4c28-9a64-c89215b386c9",
                      "parentUUID": "4e06978f-3b56-4093-b9ea-f489539b4b5e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "7eb2d679-b7ff-41ce-aa7d-866e41009986",
                      "title": "on success",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should remove all completed todos from the list",
                          "fullTitle": " Group Todo Deletion with some completed todos on success should remove all completed todos from the list",
                          "timedOut": null,
                          "duration": 593,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCount(2);\ntodos.assertTitle(0, 'TypeScript');\ntodos.assertTitle(1, 'React');",
                          "err": {},
                          "uuid": "7a04cdb5-d7a1-4144-8043-3b518d0d255b",
                          "parentUUID": "7eb2d679-b7ff-41ce-aa7d-866e41009986",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should disable ClearCompleted button",
                          "fullTitle": " Group Todo Deletion with some completed todos on success should disable ClearCompleted button",
                          "timedOut": null,
                          "duration": 489,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.clearCompletedButton().should('be.disabled');",
                          "err": {},
                          "uuid": "c10e0a40-96bd-4e57-a76f-bef0ec412938",
                          "parentUUID": "7eb2d679-b7ff-41ce-aa7d-866e41009986",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should focus the text field",
                          "fullTitle": " Group Todo Deletion with some completed todos on success should focus the text field",
                          "timedOut": null,
                          "duration": 503,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('be.focused');",
                          "err": {},
                          "uuid": "801b34e1-3ede-494e-bf55-66bfbca2de78",
                          "parentUUID": "7eb2d679-b7ff-41ce-aa7d-866e41009986",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "7a04cdb5-d7a1-4144-8043-3b518d0d255b",
                        "c10e0a40-96bd-4e57-a76f-bef0ec412938",
                        "801b34e1-3ede-494e-bf55-66bfbca2de78"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1585,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "2d657e05-bd31-4e8a-9604-655db53d5ef4",
                      "title": "on a single fail",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should show an error message if any of the group deletions fails",
                          "fullTitle": " Group Todo Deletion with some completed todos on a single fail should show an error message if any of the group deletions fails",
                          "timedOut": null,
                          "duration": 484,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to delete a todo');",
                          "err": {},
                          "uuid": "30d44908-1ec2-49f1-b06a-cee4a1e5a8c9",
                          "parentUUID": "2d657e05-bd31-4e8a-9604-655db53d5ef4",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should remove todos with success responses and keep todos with errors",
                          "fullTitle": " Group Todo Deletion with some completed todos on a single fail should remove todos with success responses and keep todos with errors",
                          "timedOut": null,
                          "duration": 609,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCount(3);\ntodos.assertTitle(0, 'CSS');\ntodos.assertTitle(1, 'TypeScript');",
                          "err": {},
                          "uuid": "1c52b789-0360-4111-802c-d657363a78b7",
                          "parentUUID": "2d657e05-bd31-4e8a-9604-655db53d5ef4",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not disable ClearCompleted button",
                          "fullTitle": " Group Todo Deletion with some completed todos on a single fail should not disable ClearCompleted button",
                          "timedOut": null,
                          "duration": 525,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.clearCompletedButton().should('not.be.disabled');",
                          "err": {},
                          "uuid": "40072c99-c3d8-4d1b-aca5-4064ce2d2a90",
                          "parentUUID": "2d657e05-bd31-4e8a-9604-655db53d5ef4",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "30d44908-1ec2-49f1-b06a-cee4a1e5a8c9",
                        "1c52b789-0360-4111-802c-d657363a78b7",
                        "40072c99-c3d8-4d1b-aca5-4064ce2d2a90"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1618,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "164ad26d-18e2-476b-8515-459881508fd7",
                    "b6ffe8fe-d7d9-4c28-9a64-c89215b386c9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 960,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "6c6177ea-a65c-4193-8f0e-4806a6f42aa1",
                  "title": "with all todos completed",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos after clearing all completed todos",
                      "fullTitle": " Group Todo Deletion with all todos completed should hide todos after clearing all completed todos",
                      "timedOut": null,
                      "duration": 552,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "bb5ce4dc-8e53-432c-819c-26fb589cef4b",
                      "parentUUID": "6c6177ea-a65c-4193-8f0e-4806a6f42aa1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide footer after clearing all completed todos",
                      "fullTitle": " Group Todo Deletion with all todos completed should hide footer after clearing all completed todos",
                      "timedOut": null,
                      "duration": 1372,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "8d1a121e-59a4-4082-b392-26c535154e40",
                      "parentUUID": "6c6177ea-a65c-4193-8f0e-4806a6f42aa1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bb5ce4dc-8e53-432c-819c-26fb589cef4b",
                    "8d1a121e-59a4-4082-b392-26c535154e40"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1924,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f6a13802-64fa-47f6-be55-652c2f87924e",
              "title": "Todo Toggling",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "08ec05f9-8ebb-4aca-9bf6-ca44e038130f",
                  "title": "before receving response",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should send an update request",
                      "fullTitle": " Todo Toggling before receving response should send an update request",
                      "timedOut": null,
                      "duration": 676,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.statusToggler(0).click();\ncy.wait('@updateRequest');",
                      "err": {},
                      "uuid": "29c3ac73-f509-4c85-bd5c-48781fcd9e94",
                      "parentUUID": "08ec05f9-8ebb-4aca-9bf6-ca44e038130f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show loader after click",
                      "fullTitle": " Todo Toggling before receving response should show loader after click",
                      "timedOut": null,
                      "duration": 1851,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.pauseTimers();\ntodos.statusToggler(0).click();\ntodos.assertLoading(0);",
                      "err": {},
                      "uuid": "625c9a78-7976-4618-b849-8495094a664e",
                      "parentUUID": "08ec05f9-8ebb-4aca-9bf6-ca44e038130f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show error message after click",
                      "fullTitle": " Todo Toggling before receving response should not show error message after click",
                      "timedOut": null,
                      "duration": 1078,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.pauseTimers();\ntodos.statusToggler(0).click();\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "80841e58-2a5c-4601-8877-d5388d461866",
                      "parentUUID": "08ec05f9-8ebb-4aca-9bf6-ca44e038130f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not hide a todo if filtered",
                      "fullTitle": " Todo Toggling before receving response should not hide a todo if filtered",
                      "timedOut": null,
                      "duration": 649,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.pauseTimers();\ncy.tick(1000); // flush JS animation\ntodos.statusToggler(0).click();\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "f2649fe7-e9c7-4968-986c-569e8d341e66",
                      "parentUUID": "08ec05f9-8ebb-4aca-9bf6-ca44e038130f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "29c3ac73-f509-4c85-bd5c-48781fcd9e94",
                    "625c9a78-7976-4618-b849-8495094a664e",
                    "80841e58-2a5c-4601-8877-d5388d461866",
                    "f2649fe7-e9c7-4968-986c-569e8d341e66"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4254,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "5e7d4ab1-9bc4-44e5-8b89-73aec9d9d3dc",
                  "title": "on success",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should toggle a todo",
                      "fullTitle": " Todo Toggling on success should toggle a todo",
                      "timedOut": null,
                      "duration": 709,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotCompleted(0);\ntodos.statusToggler(0).should('not.be.checked');",
                      "err": {},
                      "uuid": "49ad961d-c179-4bf6-89be-41157b9b9cf2",
                      "parentUUID": "5e7d4ab1-9bc4-44e5-8b89-73aec9d9d3dc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should cancel loading",
                      "fullTitle": " Todo Toggling on success should cancel loading",
                      "timedOut": null,
                      "duration": 849,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.flushJSTimers();\ntodos.assertNotLoading(0);",
                      "err": {},
                      "uuid": "aa64e508-3e84-4a0d-98ff-ef8d102d8654",
                      "parentUUID": "5e7d4ab1-9bc4-44e5-8b89-73aec9d9d3dc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should update the counter",
                      "fullTitle": " Todo Toggling on success should update the counter",
                      "timedOut": null,
                      "duration": 1056,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '3 items left');",
                      "err": {},
                      "uuid": "d4a14acf-b55a-479d-8ff5-2094ce5f6129",
                      "parentUUID": "5e7d4ab1-9bc4-44e5-8b89-73aec9d9d3dc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show an error message",
                      "fullTitle": " Todo Toggling on success should not show an error message",
                      "timedOut": null,
                      "duration": 931,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertHidden();",
                      "err": {},
                      "uuid": "3fca4204-f207-4584-b4ae-428d97039314",
                      "parentUUID": "5e7d4ab1-9bc4-44e5-8b89-73aec9d9d3dc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "49ad961d-c179-4bf6-89be-41157b9b9cf2",
                    "aa64e508-3e84-4a0d-98ff-ef8d102d8654",
                    "d4a14acf-b55a-479d-8ff5-2094ce5f6129",
                    "3fca4204-f207-4584-b4ae-428d97039314"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3545,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "8b3764c1-469b-4ad4-aff7-afd02b639b13",
                  "title": "on fail",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show an error",
                      "fullTitle": " Todo Toggling on fail should show an error",
                      "timedOut": null,
                      "duration": 639,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to update a todo');",
                      "err": {},
                      "uuid": "28df1186-91a8-49cc-a510-6fb19e7b7b91",
                      "parentUUID": "8b3764c1-469b-4ad4-aff7-afd02b639b13",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not toggle a todo",
                      "fullTitle": " Todo Toggling on fail should not toggle a todo",
                      "timedOut": null,
                      "duration": 783,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCompleted(0);\ntodos.statusToggler(0).should('be.checked');",
                      "err": {},
                      "uuid": "634cb841-3606-4ff6-a4a4-b44d218a93ec",
                      "parentUUID": "8b3764c1-469b-4ad4-aff7-afd02b639b13",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should cancel loading",
                      "fullTitle": " Todo Toggling on fail should cancel loading",
                      "timedOut": null,
                      "duration": 969,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.flushJSTimers();\ntodos.assertNotLoading(0);",
                      "err": {},
                      "uuid": "b7f82c08-201a-4c7c-bc6d-5d60d49fe2f7",
                      "parentUUID": "8b3764c1-469b-4ad4-aff7-afd02b639b13",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update the counter",
                      "fullTitle": " Todo Toggling on fail should not update the counter",
                      "timedOut": null,
                      "duration": 931,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "28ced831-e73a-4f11-b8d8-7bca8adc178d",
                      "parentUUID": "8b3764c1-469b-4ad4-aff7-afd02b639b13",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to toggle again",
                      "fullTitle": " Todo Toggling on fail should allow to toggle again",
                      "timedOut": null,
                      "duration": 1079,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257334).as('updateRequest2');\ntodos.statusToggler(0).click();\ncy.wait('@updateRequest2');\ntodos.assertNotCompleted(0);",
                      "err": {},
                      "uuid": "cab3e792-e26d-49f8-82ee-f45643bcc9e6",
                      "parentUUID": "8b3764c1-469b-4ad4-aff7-afd02b639b13",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "28df1186-91a8-49cc-a510-6fb19e7b7b91",
                    "634cb841-3606-4ff6-a4a4-b44d218a93ec",
                    "b7f82c08-201a-4c7c-bc6d-5d60d49fe2f7",
                    "28ced831-e73a-4f11-b8d8-7bca8adc178d",
                    "cab3e792-e26d-49f8-82ee-f45643bcc9e6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4401,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "be3eced9-3207-4be4-91a7-f108ede4cca9",
                  "title": "if filtered",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide a todo on success",
                      "fullTitle": " Todo Toggling if filtered should hide a todo on success",
                      "timedOut": null,
                      "duration": 854,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257334).as('updateRequest');\ntodos.statusToggler(0).click();\ncy.wait('@updateRequest');\ntodos.assertCount(2);\ntodos.assertTitle(0, 'CSS');",
                      "err": {},
                      "uuid": "a9cb6739-f626-4008-9e1b-6772d4e578d0",
                      "parentUUID": "be3eced9-3207-4be4-91a7-f108ede4cca9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a todo on success when selected an oposite filter",
                      "fullTitle": " Todo Toggling if filtered should show a todo on success when selected an oposite filter",
                      "timedOut": null,
                      "duration": 953,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257334).as('updateRequest');\ntodos.statusToggler(0).click();\nfilter.link('active').click();\ncy.wait('@updateRequest');\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "a0ddea42-192d-4a9d-a54b-73ca4504dfa9",
                      "parentUUID": "be3eced9-3207-4be4-91a7-f108ede4cca9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not hide a todo on fail",
                      "fullTitle": " Todo Toggling if filtered should not hide a todo on fail",
                      "timedOut": null,
                      "duration": 799,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockUpdate(257334, {\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('updateRequest');\ntodos.statusToggler(0).click();\ncy.wait('@updateRequest');\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "f662668b-b59a-4f14-aa52-41f2a4b5b3ab",
                      "parentUUID": "be3eced9-3207-4be4-91a7-f108ede4cca9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a9cb6739-f626-4008-9e1b-6772d4e578d0",
                    "a0ddea42-192d-4a9d-a54b-73ca4504dfa9",
                    "f662668b-b59a-4f14-aa52-41f2a4b5b3ab"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2606,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3ec846e4-9a5f-4438-bcb5-c8f787319894",
              "title": "Toggle All Button",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "3e53bbf8-2c4a-495c-8144-69cb07ac72eb",
                  "title": "if there are no todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not be visible while loading todos",
                      "fullTitle": " Toggle All Button if there are no todos should not be visible while loading todos",
                      "timedOut": null,
                      "duration": 262,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockLoad({\n  body: []\n}).as('loadRequest');\npage.pauseTimers();\npage.visit();\npage.toggleAllButton().should('not.exist');",
                      "err": {},
                      "uuid": "eede3e90-f867-4dcd-8c5a-377531028726",
                      "parentUUID": "3e53bbf8-2c4a-495c-8144-69cb07ac72eb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not be visible when loaded",
                      "fullTitle": " Toggle All Button if there are no todos should not be visible when loaded",
                      "timedOut": null,
                      "duration": 522,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockLoad({\n  body: []\n}).as('loadRequest');\npage.visit();\ncy.wait('@loadRequest');\npage.toggleAllButton().should('not.exist');",
                      "err": {},
                      "uuid": "7e4efddb-20f1-4fe7-aa3f-b004077e7bde",
                      "parentUUID": "3e53bbf8-2c4a-495c-8144-69cb07ac72eb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should appear after adding a todo",
                      "fullTitle": " Toggle All Button if there are no todos should appear after adding a todo",
                      "timedOut": null,
                      "duration": 942,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockLoad({\n  body: []\n}).as('loadRequest');\npage.mockCreate().as('createRequest');\npage.visit();\ncy.wait('@loadRequest');\npage.newTodoField().type('First todo{enter}');\ncy.wait('@createRequest');\npage.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "e269ec4f-a66e-42c4-b581-a4b03948147d",
                      "parentUUID": "3e53bbf8-2c4a-495c-8144-69cb07ac72eb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should disappear after removing the last todo",
                      "fullTitle": " Toggle All Button if there are no todos should disappear after removing the last todo",
                      "timedOut": null,
                      "duration": 814,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const todo = {\n  \"id\": 257334,\n  \"createdAt\": \"2023-09-19T08:21:56.486Z\",\n  \"updatedAt\": \"2023-09-19T08:23:07.096Z\",\n  \"userId\": 1,\n  \"title\": \"HTML\",\n  \"completed\": false\n};\npage.mockLoad({\n  body: [todo]\n}).as('loadRequest');\npage.mockDelete(257334).as('deleteRequest');\npage.visit();\ncy.wait('@loadRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\npage.toggleAllButton().should('not.exist');",
                      "err": {},
                      "uuid": "bf1544d5-8015-4be1-87c1-0233fc8e5121",
                      "parentUUID": "3e53bbf8-2c4a-495c-8144-69cb07ac72eb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eede3e90-f867-4dcd-8c5a-377531028726",
                    "7e4efddb-20f1-4fe7-aa3f-b004077e7bde",
                    "e269ec4f-a66e-42c4-b581-a4b03948147d",
                    "bf1544d5-8015-4be1-87c1-0233fc8e5121"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2540,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "987da3cc-2ec7-4629-8910-89cf89b4683e",
                  "title": "if all todos are completed",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should be visible",
                      "fullTitle": " Toggle All Button if all todos are completed should be visible",
                      "timedOut": null,
                      "duration": 562,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "58927a9a-6c85-4f81-876c-31f26e0c3e0d",
                      "parentUUID": "987da3cc-2ec7-4629-8910-89cf89b4683e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should stay visible after filtering out all the todos",
                      "fullTitle": " Toggle All Button if all todos are completed should stay visible after filtering out all the todos",
                      "timedOut": null,
                      "duration": 555,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "6c6be1bf-b7aa-415c-bf1c-3b0e8954c9c9",
                      "parentUUID": "987da3cc-2ec7-4629-8910-89cf89b4683e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should be active",
                      "fullTitle": " Toggle All Button if all todos are completed should be active",
                      "timedOut": null,
                      "duration": 871,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('have.class', 'active');",
                      "err": {},
                      "uuid": "32d02fee-298c-48c4-963e-5be7c89021cf",
                      "parentUUID": "987da3cc-2ec7-4629-8910-89cf89b4683e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should become not active after toggling a todo",
                      "fullTitle": " Toggle All Button if all todos are completed should become not active after toggling a todo",
                      "timedOut": null,
                      "duration": 1950,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257335).as('updateRequest');\ntodos.statusToggler(1).click();\ncy.wait('@updateRequest');\npage.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "0041666a-1d77-441a-a5f4-4d4f316ece25",
                      "parentUUID": "987da3cc-2ec7-4629-8910-89cf89b4683e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should stay active after a todo toggling fail",
                      "fullTitle": " Toggle All Button if all todos are completed should stay active after a todo toggling fail",
                      "timedOut": null,
                      "duration": 988,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockUpdate(257335, {\n  statusCode: 503\n}).as('updateRequest');\ntodos.statusToggler(1).click();\ncy.wait('@updateRequest');\npage.toggleAllButton().should('have.class', 'active');",
                      "err": {},
                      "uuid": "897939a4-3726-4ab1-87a9-32b4dd29aed3",
                      "parentUUID": "987da3cc-2ec7-4629-8910-89cf89b4683e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "dbe48c02-8358-4b56-91ec-615ee4dd0af1",
                      "title": "on click",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send requests for all todos",
                          "fullTitle": " Toggle All Button if all todos are completed on click should send requests for all todos",
                          "timedOut": null,
                          "duration": 1022,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// if before each pass",
                          "err": {},
                          "uuid": "4b1802a3-0220-4ba6-b60d-63ddb6b1cbcd",
                          "parentUUID": "dbe48c02-8358-4b56-91ec-615ee4dd0af1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should make all todos active",
                          "fullTitle": " Toggle All Button if all todos are completed on click should make all todos active",
                          "timedOut": null,
                          "duration": 1159,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertNotCompleted(0);\ntodos.assertNotCompleted(1);\ntodos.assertNotCompleted(2);\ntodos.assertNotCompleted(3);\ntodos.assertNotCompleted(4);",
                          "err": {},
                          "uuid": "bc29d3e3-2869-4667-84a9-2bfdc64dbc22",
                          "parentUUID": "dbe48c02-8358-4b56-91ec-615ee4dd0af1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should become not active",
                          "fullTitle": " Toggle All Button if all todos are completed on click should become not active",
                          "timedOut": null,
                          "duration": 1713,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.toggleAllButton().should('not.have.class', 'active');",
                          "err": {},
                          "uuid": "7351042d-f118-4fd8-86d6-65b87d207373",
                          "parentUUID": "dbe48c02-8358-4b56-91ec-615ee4dd0af1",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4b1802a3-0220-4ba6-b60d-63ddb6b1cbcd",
                        "bc29d3e3-2869-4667-84a9-2bfdc64dbc22",
                        "7351042d-f118-4fd8-86d6-65b87d207373"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 3894,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "58927a9a-6c85-4f81-876c-31f26e0c3e0d",
                    "6c6be1bf-b7aa-415c-bf1c-3b0e8954c9c9",
                    "32d02fee-298c-48c4-963e-5be7c89021cf",
                    "0041666a-1d77-441a-a5f4-4d4f316ece25",
                    "897939a4-3726-4ab1-87a9-32b4dd29aed3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4926,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "60d42a95-e42c-451f-8cf2-37021d074f06",
                  "title": "if all todos are active",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should be visible",
                      "fullTitle": " Toggle All Button if all todos are active should be visible",
                      "timedOut": null,
                      "duration": 596,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "efacd1eb-166b-4e79-ad57-e16aa58f7aeb",
                      "parentUUID": "60d42a95-e42c-451f-8cf2-37021d074f06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not be active",
                      "fullTitle": " Toggle All Button if all todos are active should not be active",
                      "timedOut": null,
                      "duration": 686,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "0193d68a-4ed7-4896-8dea-eca384658e90",
                      "parentUUID": "60d42a95-e42c-451f-8cf2-37021d074f06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not become active after toggling a todo",
                      "fullTitle": " Toggle All Button if all todos are active should not become active after toggling a todo",
                      "timedOut": null,
                      "duration": 938,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257335).as('updateRequest');\ntodos.statusToggler(1).click();\ncy.wait('@updateRequest');\npage.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "6327ef5b-fa1f-4b69-86a0-879a3dbacc78",
                      "parentUUID": "60d42a95-e42c-451f-8cf2-37021d074f06",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "4b1c68b5-01cc-45db-b0d6-cff58690a8b5",
                      "title": "on click",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send requests for all todos",
                          "fullTitle": " Toggle All Button if all todos are active on click should send requests for all todos",
                          "timedOut": null,
                          "duration": 1350,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// if before each pass",
                          "err": {},
                          "uuid": "7d29b0f6-9cf9-4307-b849-92bf106a49dc",
                          "parentUUID": "4b1c68b5-01cc-45db-b0d6-cff58690a8b5",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should make all todos completed",
                          "fullTitle": " Toggle All Button if all todos are active on click should make all todos completed",
                          "timedOut": null,
                          "duration": 1373,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);\ntodos.assertCompleted(3);\ntodos.assertCompleted(4);",
                          "err": {},
                          "uuid": "97f752cd-7950-4cb6-b35d-0ff4a1f9eede",
                          "parentUUID": "4b1c68b5-01cc-45db-b0d6-cff58690a8b5",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should become active",
                          "fullTitle": " Toggle All Button if all todos are active on click should become active",
                          "timedOut": null,
                          "duration": 890,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.toggleAllButton().should('have.class', 'active');",
                          "err": {},
                          "uuid": "1211484c-c061-4d3b-8d01-7351f702643f",
                          "parentUUID": "4b1c68b5-01cc-45db-b0d6-cff58690a8b5",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "7d29b0f6-9cf9-4307-b849-92bf106a49dc",
                        "97f752cd-7950-4cb6-b35d-0ff4a1f9eede",
                        "1211484c-c061-4d3b-8d01-7351f702643f"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 3613,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "efacd1eb-166b-4e79-ad57-e16aa58f7aeb",
                    "0193d68a-4ed7-4896-8dea-eca384658e90",
                    "6327ef5b-fa1f-4b69-86a0-879a3dbacc78"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2220,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "bc9db3e8-ac4f-4bc2-9304-4552f01c5526",
                  "title": "if there are some mixed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should be visible",
                      "fullTitle": " Toggle All Button if there are some mixed todos should be visible",
                      "timedOut": null,
                      "duration": 830,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "63cf669a-881e-49a6-bec3-224565f38e55",
                      "parentUUID": "bc9db3e8-ac4f-4bc2-9304-4552f01c5526",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not be active",
                      "fullTitle": " Toggle All Button if there are some mixed todos should not be active",
                      "timedOut": null,
                      "duration": 537,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "dd585cf6-c498-498e-91fa-fce6b77d5726",
                      "parentUUID": "bc9db3e8-ac4f-4bc2-9304-4552f01c5526",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should become active after completing all todos",
                      "fullTitle": " Toggle All Button if there are some mixed todos should become active after completing all todos",
                      "timedOut": null,
                      "duration": 1743,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257337).as('updateRequest1');\npage.mockUpdate(257338).as('updateRequest2');\ntodos.statusToggler(3).click();\ncy.wait('@updateRequest1');\ntodos.statusToggler(4).click();\ncy.wait('@updateRequest2');\npage.toggleAllButton().should('have.class', 'active');",
                      "err": {},
                      "uuid": "c861f58f-0b98-4362-a724-b6b6f2f0298d",
                      "parentUUID": "bc9db3e8-ac4f-4bc2-9304-4552f01c5526",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "99b23c78-4f46-4931-a3fa-02caf08ecab8",
                      "title": "on click",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send requests only for not completed todos",
                          "fullTitle": " Toggle All Button if there are some mixed todos on click should send requests only for not completed todos",
                          "timedOut": null,
                          "duration": 850,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.get('@update4').should('not.be.called');\ncy.get('@update5').should('not.be.called');\ncy.get('@update6').should('not.be.called');",
                          "err": {},
                          "uuid": "a2384a56-e3a8-4755-be22-5ac8cb641f5e",
                          "parentUUID": "99b23c78-4f46-4931-a3fa-02caf08ecab8",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should make all todos completed",
                          "fullTitle": " Toggle All Button if there are some mixed todos on click should make all todos completed",
                          "timedOut": null,
                          "duration": 923,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);\ntodos.assertCompleted(3);\ntodos.assertCompleted(4);",
                          "err": {},
                          "uuid": "7aceb449-0474-4bf1-8559-eea7cd963910",
                          "parentUUID": "99b23c78-4f46-4931-a3fa-02caf08ecab8",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should become active",
                          "fullTitle": " Toggle All Button if there are some mixed todos on click should become active",
                          "timedOut": null,
                          "duration": 852,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.toggleAllButton().should('have.class', 'active');",
                          "err": {},
                          "uuid": "51f56c33-fbb8-4551-81c2-9f187812d3c7",
                          "parentUUID": "99b23c78-4f46-4931-a3fa-02caf08ecab8",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "a2384a56-e3a8-4755-be22-5ac8cb641f5e",
                        "7aceb449-0474-4bf1-8559-eea7cd963910",
                        "51f56c33-fbb8-4551-81c2-9f187812d3c7"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 2625,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "63cf669a-881e-49a6-bec3-224565f38e55",
                    "dd585cf6-c498-498e-91fa-fce6b77d5726",
                    "c861f58f-0b98-4362-a724-b6b6f2f0298d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3110,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e3c68904-c8a0-4029-a7f7-80bbd273c3dc",
              "title": "Renaming",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not show forms by default",
                  "fullTitle": " Renaming should not show forms by default",
                  "timedOut": null,
                  "duration": 668,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.titleField(0).should('not.exist');\ntodos.titleField(1).should('not.exist');\ntodos.titleField(2).should('not.exist');\ntodos.titleField(3).should('not.exist');\ntodos.titleField(4).should('not.exist');",
                  "err": {},
                  "uuid": "f4bcee01-170e-4e44-8e9b-0acaa2582382",
                  "parentUUID": "e3c68904-c8a0-4029-a7f7-80bbd273c3dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "5895f1a5-d931-4817-8510-03927ca72080",
                  "title": "Edit Form",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                      "title": "by default",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should be opened on dblclick",
                          "fullTitle": " Renaming Edit Form by default should be opened on dblclick",
                          "timedOut": null,
                          "duration": 583,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "0e4521f8-d659-4d58-b464-863e45156702",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should have current value",
                          "fullTitle": " Renaming Edit Form by default should have current value",
                          "timedOut": null,
                          "duration": 656,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).should('have.value', 'HTML');",
                          "err": {},
                          "uuid": "92f66234-04ea-406d-a46f-afd3bbf7e12d",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be focused",
                          "fullTitle": " Renaming Edit Form by default should be focused",
                          "timedOut": null,
                          "duration": 616,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).should('be.focused');",
                          "err": {},
                          "uuid": "a8c1fc63-f9d8-4566-81cd-c3acf9d90050",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide a title",
                          "fullTitle": " Renaming Edit Form by default should hide a title",
                          "timedOut": null,
                          "duration": 558,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.title(0).should('not.exist');",
                          "err": {},
                          "uuid": "534bb927-0de9-4eaf-90b6-b450237f913d",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide DeleteButton",
                          "fullTitle": " Renaming Edit Form by default should hide DeleteButton",
                          "timedOut": null,
                          "duration": 567,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.deleteButton(0).should('not.exist');",
                          "err": {},
                          "uuid": "c3c24046-cbbb-47f0-a91e-f78a70bf8db3",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should keep StatusToggler",
                          "fullTitle": " Renaming Edit Form by default should keep StatusToggler",
                          "timedOut": null,
                          "duration": 552,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.statusToggler(0).should('exist');",
                          "err": {},
                          "uuid": "b34bfc80-c174-4e0e-b24e-05963af9a010",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not open forms for other todos",
                          "fullTitle": " Renaming Edit Form by default should not open forms for other todos",
                          "timedOut": null,
                          "duration": 963,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(1).should('not.exist');\ntodos.titleField(2).should('not.exist');\ntodos.titleField(3).should('not.exist');\ntodos.titleField(4).should('not.exist');",
                          "err": {},
                          "uuid": "b14ac6b4-730b-4ec2-b07b-aaf796aa5b89",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not send a request on change",
                          "fullTitle": " Renaming Edit Form by default should not send a request on change",
                          "timedOut": null,
                          "duration": 1040,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "2ac5b397-60e6-4940-8e6a-01bbdcb15511",
                          "parentUUID": "e3d49a62-8491-45fd-84cd-649bed490cd6",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "0e4521f8-d659-4d58-b464-863e45156702",
                        "92f66234-04ea-406d-a46f-afd3bbf7e12d",
                        "a8c1fc63-f9d8-4566-81cd-c3acf9d90050",
                        "534bb927-0de9-4eaf-90b6-b450237f913d",
                        "c3c24046-cbbb-47f0-a91e-f78a70bf8db3",
                        "b34bfc80-c174-4e0e-b24e-05963af9a010",
                        "b14ac6b4-730b-4ec2-b07b-aaf796aa5b89",
                        "2ac5b397-60e6-4940-8e6a-01bbdcb15511"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 5535,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "cab1fd38-ed82-4a2c-bc9a-edb66d42fdaf",
                      "title": "on Escape",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should be closed",
                          "fullTitle": " Renaming Edit Form on Escape should be closed",
                          "timedOut": null,
                          "duration": 765,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123123{esc}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "0b405dda-387a-4c7c-be2f-4d3d74ab6769",
                          "parentUUID": "cab1fd38-ed82-4a2c-bc9a-edb66d42fdaf",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should keep current title",
                          "fullTitle": " Renaming Edit Form on Escape should keep current title",
                          "timedOut": null,
                          "duration": 707,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123123{esc}');\ntodos.assertTitle(0, 'HTML');",
                          "err": {},
                          "uuid": "3afa65ce-83cb-4c63-a6bd-a73290c3572b",
                          "parentUUID": "cab1fd38-ed82-4a2c-bc9a-edb66d42fdaf",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not send a request",
                          "fullTitle": " Renaming Edit Form on Escape should not send a request",
                          "timedOut": null,
                          "duration": 807,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123123{esc}');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "4d48cf50-cfd2-4ea2-9922-3567cc4d26f4",
                          "parentUUID": "cab1fd38-ed82-4a2c-bc9a-edb66d42fdaf",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "0b405dda-387a-4c7c-be2f-4d3d74ab6769",
                        "3afa65ce-83cb-4c63-a6bd-a73290c3572b",
                        "4d48cf50-cfd2-4ea2-9922-3567cc4d26f4"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 2279,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "b856d4cd-51ca-4863-a246-753a50327aba",
                      "title": "on enter before recieved a response",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send a request",
                          "fullTitle": " Renaming Edit Form on enter before recieved a response should send a request",
                          "timedOut": null,
                          "duration": 1135,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123{enter}');\ncy.get('@renameCallback').should('have.callCount', 1);",
                          "err": {},
                          "uuid": "b01c07e0-c59f-4a0e-9d76-fc2cf31a6faa",
                          "parentUUID": "b856d4cd-51ca-4863-a246-753a50327aba",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show loader",
                          "fullTitle": " Renaming Edit Form on enter before recieved a response should show loader",
                          "timedOut": null,
                          "duration": 747,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockUpdate(257334);\ntodos.title(0).trigger('dblclick');\npage.pauseTimers();\ntodos.titleField(0).type('123{enter}');\ntodos.assertLoading(0);",
                          "err": {},
                          "uuid": "e060b989-220b-4350-b2d2-b75b04098215",
                          "parentUUID": "b856d4cd-51ca-4863-a246-753a50327aba",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should stay while waiting",
                          "fullTitle": " Renaming Edit Form on enter before recieved a response should stay while waiting",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "page.mockUpdate(257334);\ntodos.title(0).trigger('dblclick');\npage.pauseTimers();\ntodos.titleField(0).type('123{enter}');\ntodos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "11c52faf-0379-4c90-8848-7c73b74a0090",
                          "parentUUID": "b856d4cd-51ca-4863-a246-753a50327aba",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "b01c07e0-c59f-4a0e-9d76-fc2cf31a6faa",
                        "e060b989-220b-4350-b2d2-b75b04098215"
                      ],
                      "failures": [],
                      "pending": [
                        "11c52faf-0379-4c90-8848-7c73b74a0090"
                      ],
                      "skipped": [],
                      "duration": 1882,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "bc02483e-3c8a-4351-8126-ea604b2121ca",
                      "title": "on success",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should cancel loading",
                          "fullTitle": " Renaming Edit Form on success should cancel loading",
                          "timedOut": null,
                          "duration": 973,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('123{enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.assertNotLoading(0);",
                          "err": {},
                          "uuid": "c0fbcb4c-5df5-4cb4-bb94-696cce4430c4",
                          "parentUUID": "bc02483e-3c8a-4351-8126-ea604b2121ca",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be closed",
                          "fullTitle": " Renaming Edit Form on success should be closed",
                          "timedOut": null,
                          "duration": 949,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('123{enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "a92aabcf-fcb7-48df-88a4-5b7e4eab466e",
                          "parentUUID": "bc02483e-3c8a-4351-8126-ea604b2121ca",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show the updated title",
                          "fullTitle": " Renaming Edit Form on success should show the updated title",
                          "timedOut": null,
                          "duration": 1236,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('Something{enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.assertTitle(0, 'Something');",
                          "err": {},
                          "uuid": "24183845-5f79-4332-9ada-6adc5a5137ff",
                          "parentUUID": "bc02483e-3c8a-4351-8126-ea604b2121ca",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should trim the new title",
                          "fullTitle": " Renaming Edit Form on success should trim the new title",
                          "timedOut": null,
                          "duration": 2434,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('   Some new title      {enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.assertTitle(0, 'Some new title');",
                          "err": {},
                          "uuid": "764cd6e7-1d27-47cb-b89d-c45b94b0e237",
                          "parentUUID": "bc02483e-3c8a-4351-8126-ea604b2121ca",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "c0fbcb4c-5df5-4cb4-bb94-696cce4430c4",
                        "a92aabcf-fcb7-48df-88a4-5b7e4eab466e",
                        "24183845-5f79-4332-9ada-6adc5a5137ff",
                        "764cd6e7-1d27-47cb-b89d-c45b94b0e237"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 5592,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "163b329a-5a1e-41fb-a7b9-33298e61b3ef",
                      "title": "on fail",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should cancel loading",
                          "fullTitle": " Renaming Edit Form on fail should cancel loading",
                          "timedOut": null,
                          "duration": 866,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.flushJSTimers();\ntodos.assertNotLoading(0);",
                          "err": {},
                          "uuid": "e68f10af-36c9-4e44-8771-6919b5e2274a",
                          "parentUUID": "163b329a-5a1e-41fb-a7b9-33298e61b3ef",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should stay open",
                          "fullTitle": " Renaming Edit Form on fail should stay open",
                          "timedOut": null,
                          "duration": 591,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "6adfc505-dc17-4a33-99da-7000a68e3816",
                          "parentUUID": "163b329a-5a1e-41fb-a7b9-33298e61b3ef",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show error message",
                          "fullTitle": " Renaming Edit Form on fail should show error message",
                          "timedOut": null,
                          "duration": 678,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to update a todo');",
                          "err": {},
                          "uuid": "c60ce720-82e4-421e-9c10-7e63b1619a5d",
                          "parentUUID": "163b329a-5a1e-41fb-a7b9-33298e61b3ef",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide error message in 3s",
                          "fullTitle": " Renaming Edit Form on fail should hide error message in 3s",
                          "timedOut": null,
                          "duration": 3833,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.flushJSTimers(3000);\nerrorMessage.assertHidden();",
                          "err": {},
                          "uuid": "c8b977fa-f578-4d6a-9d0a-b9d85dfdc8d6",
                          "parentUUID": "163b329a-5a1e-41fb-a7b9-33298e61b3ef",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "e68f10af-36c9-4e44-8771-6919b5e2274a",
                        "6adfc505-dc17-4a33-99da-7000a68e3816",
                        "c60ce720-82e4-421e-9c10-7e63b1619a5d",
                        "c8b977fa-f578-4d6a-9d0a-b9d85dfdc8d6"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 5968,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "bb519ad6-7093-4856-92c8-8149bd0b9e62",
                      "title": "if title was not changed",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should not send a request on enter",
                          "fullTitle": " Renaming Edit Form if title was not changed should not send a request on enter",
                          "timedOut": null,
                          "duration": 694,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{enter}');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "2bc0fc9d-2be0-4d2c-ab3a-4af5c89da9b7",
                          "parentUUID": "bb519ad6-7093-4856-92c8-8149bd0b9e62",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be close on enter",
                          "fullTitle": " Renaming Edit Form if title was not changed should be close on enter",
                          "timedOut": null,
                          "duration": 517,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{enter}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "22855c73-d2cd-4baf-80b4-7d9cb24bf526",
                          "parentUUID": "bb519ad6-7093-4856-92c8-8149bd0b9e62",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be closed on Escape",
                          "fullTitle": " Renaming Edit Form if title was not changed should be closed on Escape",
                          "timedOut": null,
                          "duration": 1109,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{esc}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "3134bd55-e4c7-42ec-8683-92bc73f9c2ec",
                          "parentUUID": "bb519ad6-7093-4856-92c8-8149bd0b9e62",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should preserve current title on save",
                          "fullTitle": " Renaming Edit Form if title was not changed should preserve current title on save",
                          "timedOut": null,
                          "duration": 598,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{enter}');\ntodos.assertTitle(0, 'HTML');",
                          "err": {},
                          "uuid": "ef36e90a-fdd6-4afb-a748-d741aca3e673",
                          "parentUUID": "bb519ad6-7093-4856-92c8-8149bd0b9e62",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "2bc0fc9d-2be0-4d2c-ab3a-4af5c89da9b7",
                        "22855c73-d2cd-4baf-80b4-7d9cb24bf526",
                        "3134bd55-e4c7-42ec-8683-92bc73f9c2ec",
                        "ef36e90a-fdd6-4afb-a748-d741aca3e673"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 2918,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                      "title": "if title became empty",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should not send an update request on enter",
                          "fullTitle": " Renaming Edit Form if title became empty should not send an update request on enter",
                          "timedOut": null,
                          "duration": 594,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "c81837eb-7beb-4d4e-baeb-5cfec5714822",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should send a delete request on enter",
                          "fullTitle": " Renaming Edit Form if title became empty should send a delete request on enter",
                          "timedOut": null,
                          "duration": 775,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');",
                          "err": {},
                          "uuid": "34869d5a-e50b-4895-bf58-d5a837c723f9",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show loading on enter",
                          "fullTitle": " Renaming Edit Form if title became empty should show loading on enter",
                          "timedOut": null,
                          "duration": 710,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\npage.pauseTimers();\ntodos.titleField(0).type('{enter}');\ntodos.assertLoading(0);",
                          "err": {},
                          "uuid": "b295f8bd-dcde-43c5-8f6a-b87e9b577968",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should delete a todo on success",
                          "fullTitle": " Renaming Edit Form if title became empty should delete a todo on success",
                          "timedOut": null,
                          "duration": 695,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\ntodos.assertCount(4);\ntodos.assertTitle(0, 'CSS');",
                          "err": {},
                          "uuid": "f8668cec-6bab-4193-8d02-2616e35e4e21",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show deleting error message on fail",
                          "fullTitle": " Renaming Edit Form if title became empty should show deleting error message on fail",
                          "timedOut": null,
                          "duration": 928,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 503\n}).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\nerrorMessage.assertVisible();\nerrorMessage.assertText('Unable to delete a todo');",
                          "err": {},
                          "uuid": "3087e070-9e98-47e0-9755-9612d56907c5",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide loader on fail",
                          "fullTitle": " Renaming Edit Form if title became empty should hide loader on fail",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 503\n}).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\npage.flushJSTimers();\ntodos.assertNotLoading(0);",
                          "err": {},
                          "uuid": "4e755730-a12d-4ea2-b98e-ae98bfe5b040",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should stay open on fail",
                          "fullTitle": " Renaming Edit Form if title became empty should stay open on fail",
                          "timedOut": null,
                          "duration": 756,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 503\n}).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\ntodos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "0da058bf-af1a-4f48-ad21-2febf63a071a",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be closed on Escape",
                          "fullTitle": " Renaming Edit Form if title became empty should be closed on Escape",
                          "timedOut": null,
                          "duration": 621,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('{esc}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "834580a8-93b5-4098-845e-7973b38e17e9",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should preserve current title on close",
                          "fullTitle": " Renaming Edit Form if title became empty should preserve current title on close",
                          "timedOut": null,
                          "duration": 592,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('{esc}');\ntodos.title(0).should('have.text', 'HTML');",
                          "err": {},
                          "uuid": "f98de9f3-b652-42f7-90a6-81755479dd7e",
                          "parentUUID": "402d3e33-3eaa-49b7-8cd5-25050700a608",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "c81837eb-7beb-4d4e-baeb-5cfec5714822",
                        "34869d5a-e50b-4895-bf58-d5a837c723f9",
                        "b295f8bd-dcde-43c5-8f6a-b87e9b577968",
                        "f8668cec-6bab-4193-8d02-2616e35e4e21",
                        "3087e070-9e98-47e0-9755-9612d56907c5",
                        "0da058bf-af1a-4f48-ad21-2febf63a071a",
                        "834580a8-93b5-4098-845e-7973b38e17e9",
                        "f98de9f3-b652-42f7-90a6-81755479dd7e"
                      ],
                      "failures": [],
                      "pending": [
                        "4e755730-a12d-4ea2-b98e-ae98bfe5b040"
                      ],
                      "skipped": [],
                      "duration": 5671,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "31f3ab40-f2c7-4924-bf1c-1c2bc754c30e",
                      "title": "on Blur",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should save",
                          "fullTitle": " Renaming Edit Form on Blur should save",
                          "timedOut": null,
                          "duration": 987,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockUpdate(257334).as('renameRequest');\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).clear();\ntodos.titleField(0).type('New title');\ntodos.titleField(0).blur();\ncy.wait('@renameRequest');\n// just in case\npage.flushJSTimers();\ntodos.assertTitle(0, 'New title');",
                          "err": {},
                          "uuid": "6364b5b7-febe-455f-935e-3f370698ffe0",
                          "parentUUID": "31f3ab40-f2c7-4924-bf1c-1c2bc754c30e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should cancel if title was not changed",
                          "fullTitle": " Renaming Edit Form on Blur should cancel if title was not changed",
                          "timedOut": null,
                          "duration": 714,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).blur();\ncy.get('@renameCallback').should('not.be.called');\npage.flushJSTimers();\ntodos.titleField(0).should('not.exist');\ntodos.assertTitle(0, 'HTML');",
                          "err": {},
                          "uuid": "86b605ca-f5bf-40a0-a25e-5d104e847921",
                          "parentUUID": "31f3ab40-f2c7-4924-bf1c-1c2bc754c30e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should delete if title is empty",
                          "fullTitle": " Renaming Edit Form on Blur should delete if title is empty",
                          "timedOut": null,
                          "duration": 868,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).clear();\ntodos.titleField(0).blur();\ncy.wait('@deleteRequest');\ntodos.assertCount(4);\ntodos.assertTitle(0, 'CSS');",
                          "err": {},
                          "uuid": "d99fb6eb-ffd8-4391-87b4-ca2600e362a2",
                          "parentUUID": "31f3ab40-f2c7-4924-bf1c-1c2bc754c30e",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6364b5b7-febe-455f-935e-3f370698ffe0",
                        "86b605ca-f5bf-40a0-a25e-5d104e847921",
                        "d99fb6eb-ffd8-4391-87b4-ca2600e362a2"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 2569,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "f4bcee01-170e-4e44-8e9b-0acaa2582382"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 668,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}